@page "/timedemo"

@using Blazorise.ChartsEx

<h1>Gantt Chart Time Demo</h1>

<GanttChart @ref="_chart" TItem="GanttChartData<DateTime>"/>

@code {
  private GanttChart<GanttChartData<DateTime>> _chart;

  private readonly string[] Labels = { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" };
  private readonly List<string> BackgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
  private readonly List<string> BorderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };
  
  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      var options = new GanttChartOptions
      {
        Scales = new Scales
        {
          XAxes = new List<Axis>(
            new Axis[]
          {
            new Axis
            {
              // This field seems to upset the JSON serialiser
              // but we need it for temporal Gantt charts ;-(
              //Type = "time-gantt",
              
              Display = true
            }
          })
        }
      };

      //await _chart.SetOptions(options);
      _chart.Options = options;
      await HandleRedraw(_chart, GetChartDataset);
    }
  }

  private async Task HandleRedraw<TDataSet, TItem, TOptions, TModel>(BaseChart<TDataSet, TItem, TOptions, TModel> chart, Func<TDataSet> getDataSet)
    where TDataSet : ChartDataset<TItem>
    where TOptions : ChartOptions
    where TModel : ChartModel
  {
    await chart.Clear();

    await chart.AddLabelsDatasetsAndUpdate(Labels, getDataSet());
  }

  private GanttChartDataset<GanttChartData<DateTime>> GetChartDataset()
  {
    return new GanttChartDataset<GanttChartData<DateTime>>
    {
      Label = "Test data",
      Data = GetData(),
      BackgroundColor = BackgroundColors,
      BorderColor = BorderColors,
      BorderWidth = 1
    };
  }

  private List<GanttChartData<DateTime>> GetData()
  {
    return new List<GanttChartData<DateTime>> 
    {
      new GanttChartData<DateTime>
      {
        X = new GanttChartInterval<DateTime>
        {
          From = new DateTime(2006, 2, 20, 6, 3,0),
          To = new DateTime(2006, 2, 20, 12, 35,22)
        },
        Y = 1f
      },
      new GanttChartData<DateTime>
      {
        X = new GanttChartInterval<DateTime>
        {
          From = new DateTime(2006, 2, 20, 6, 0,30),
          To = new DateTime(2006, 2, 20, 18, 45,0)
        },
        Y = 3f
      }
    };
  }
}
