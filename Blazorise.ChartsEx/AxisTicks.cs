using System.Runtime.Serialization;

namespace Blazorise.ChartsEx
{
  /// <summary>
  /// The tick configuration is nested under the scale configuration in the ticks key. It defines options for the tick marks that are generated by the axis.
  /// </summary>
  [DataContract]
  public class AxisTicks
  {
    /// <summary>
    /// If true, show tick marks.
    /// </summary>
    [DataMember]
    public bool Display { get; set; } = true;

    /// <summary>
    /// Font color for tick labels.
    /// </summary>
    [DataMember]
    public string FontColor { get; set; } = "#666";

    /// <summary>
    /// Font family for the tick labels, follows CSS font-family options.
    /// </summary>
    [DataMember]
    public string FontFamily { get; set; } = "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif";

    /// <summary>
    /// Font size for the tick labels.
    /// </summary>
    [DataMember]
    public int FontSize { get; set; } = 12;

    /// <summary>
    /// Font style for the tick labels, follows CSS font-style options (i.e. normal, italic, oblique, initial, inherit).
    /// </summary>
    [DataMember]
    public string FontStyle { get; set; } = "normal";

    /// <summary>
    /// Height of an individual line of text.
    /// </summary>
    [DataMember]
    public decimal LineHeight { get; set; } = 1.2m;

    /// <summary>
    /// Reverses order of tick labels.
    /// </summary>
    [DataMember]
    public bool Reverse { get; set; }

    /// <summary>
    /// Minor ticks configuration. Omitted options are inherited from options above.
    /// </summary>
    [DataMember( EmitDefaultValue = false )]
    public AxisMinorTick Minor { get; set; }

    /// <summary>
    /// Major ticks configuration. Omitted options are inherited from options above.
    /// </summary>
    [DataMember( EmitDefaultValue = false )]
    public AxisMajorTick Major { get; set; }

    /// <summary>
    /// Sets the offset of the tick labels from the axis.
    /// </summary>
    [DataMember]
    public int Padding { get; set; }

    /// <summary>
    /// if true, scale will include 0 if it is not already included.
    /// </summary>
    [DataMember]
    public bool BeginAtZero { get; set; }
  }
}
